1. Find the department with the highest average salary
const employees = [
  { name: "Alice", department: "HR", salary: 40000 },
  { name: "Bob", department: "IT", salary: 50000 },
  { name: "Charlie", department: "IT", salary: 60000 },
  { name: "David", department: "HR", salary: 45000 }
];
// Output: "IT" (average salary 55000);


2. Get the top 2 products with highest total sales (price × quantity)
const products = [
  { name: "Laptop", price: 1000, quantity: 4 },
  { name: "Phone", price: 500, quantity: 10 },
  { name: "Tablet", price: 800, quantity: 5 }
];
// Output: ["Phone", "Tablet"]

3. Group books by genre , output = {fiction:[] , non-fiction:[]}
const books = [
  { title: "Book A", genre: "Fiction", year: 2015 },
  { title: "Book B", genre: "Non-Fiction", year: 2020 },
  { title: "Book C", genre: "Fiction", year: 2018 },
  { title: "Book D", genre: "Non-Fiction", year: 2010 }
];

4. Get list of customers who placed orders in the last 30 days
const orders = [
  { id: 1, customer: "Alice", date: "2025-07-20" },
  { id: 2, customer: "Bob", date: "2025-08-05" },
  { id: 3, customer: "Charlie", date: "2025-06-15" }
];
// Assume today = 2025-08-08   // Output: ["Alice", "Bob"]


5. Create leaderboard from game scores (each player’s highest score counts)
const games = [
  { player: "Alice", score: 40 },
  { player: "Bob", score: 60 },
  { player: "Alice", score: 70 },
  { player: "Bob", score: 55 }
];
// Output: [{player:"Alice",score:70},{player:"Bob",score:60}]


6. Merge orders with customer details (join by id)
const customers = [
  { id: 1, name: "Alice" },
  { id: 2, name: "Bob" }
];
const ordersList = [
  { orderId: 101, customerId: 1 },
  { orderId: 102, customerId: 2 }
];
// Output: [
//   { orderId: 101, customerId: 1, name: "Alice" },
//   { orderId: 102, customerId: 2, name: "Bob" }
// ]


7. Find overlapping bookings
const bookings = [
  { id: 1, start: "2025-08-01", end: "2025-08-05" },
  { id: 2, start: "2025-08-04", end: "2025-08-06" },
  { id: 3, start: "2025-08-10", end: "2025-08-12" }
];
// Output: [[1,2]]  // booking 1 and 2 overlap


const products = [
  { id: 1, name: "Laptop", price: 50000, quantity: 2 },
  { id: 2, name: "Mobile", price: 20000, quantity: 5 },
  { id: 3, name: "Headphones", price: 2000, quantity: 10 },
  { id: 4, name: "Keyboard", price: 1500, quantity: 4 },
  { id: 5, name: "Monitor", price: 12000, quantity: 3 }
];

// 8. Group products by price range: Low (≤ 5000) , Medium (> 5000 and ≤ 20000) , High (> 20000)
	 // output = {low:[] , medium:[],high:[]}

